{
  "openapi": "3.0.3",
  "info": {
    "title": "Pie for Providers API v1",
    "version": "v1"
  },
  "paths": {
    "/api/v1/businesses": {
      "get": {
        "summary": "lists all businesses for a user",
        "tags": [
          "businesses"
        ],
        "responses": {
          "200": {
            "description": "businesses found",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
            }
          }
        }
      },
      "post": {
        "summary": "creates a business",
        "tags": [
          "businesses"
        ],
        "parameters": [

        ],
        "responses": {
          "201": {
            "description": "business created",
            "content": {
            }
          },
          "422": {
            "description": "invalid request",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createBusiness"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/createBusiness"
              }
            }
          }
        }
      }
    },
    "/api/v1/businesses/{slug}": {
      "parameters": [
        {
          "name": "slug",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "retrieves a business",
        "tags": [
          "businesses"
        ],
        "responses": {
          "200": {
            "description": "business found",
            "content": {
            }
          },
          "404": {
            "description": "business not found",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
            }
          }
        }
      },
      "put": {
        "summary": "updates a business",
        "tags": [
          "businesses"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "business updated",
            "content": {
            }
          },
          "422": {
            "description": "business cannot be updated",
            "content": {
            }
          },
          "404": {
            "description": "business not found",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateBusiness"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "deletes a business",
        "tags": [
          "businesses"
        ],
        "responses": {
          "204": {
            "description": "business deleted",
            "content": {
            }
          },
          "404": {
            "description": "business not found",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
            }
          }
        }
      }
    },
    "/api/v1/case_cycles": {
      "get": {
        "summary": "lists all case_cycles for a user",
        "tags": [
          "case_cycles"
        ],
        "responses": {
          "200": {
            "description": "case_cycles found",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
            }
          }
        }
      },
      "post": {
        "summary": "creates a case_cycle",
        "tags": [
          "case_cycles"
        ],
        "parameters": [

        ],
        "responses": {
          "201": {
            "description": "case_cycle created",
            "content": {
            }
          },
          "422": {
            "description": "invalid request",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createCaseCycle"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/createCaseCycle"
              }
            }
          }
        }
      }
    },
    "/api/v1/case_cycles/{slug}": {
      "parameters": [
        {
          "name": "slug",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "retrieves a case_cycle",
        "tags": [
          "case_cycles"
        ],
        "responses": {
          "200": {
            "description": "case_cycle found",
            "content": {
            }
          },
          "404": {
            "description": "case_cycle not found",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
            }
          }
        }
      },
      "put": {
        "summary": "updates a case_cycle",
        "tags": [
          "case_cycles"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "case_cycle updated",
            "content": {
            }
          },
          "422": {
            "description": "case_cycle cannot be updated",
            "content": {
            }
          },
          "404": {
            "description": "case_cycle not found",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateCaseCycle"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "deletes a case_cycle",
        "tags": [
          "case_cycles"
        ],
        "responses": {
          "204": {
            "description": "case_cycle deleted",
            "content": {
            }
          },
          "404": {
            "description": "case_cycle not found",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
            }
          }
        }
      }
    },
    "/api/v1/child_case_cycle_payments": {
      "get": {
        "summary": "lists all child_case_cycle_payments for a user",
        "tags": [
          "child_case_cycle_payments"
        ],
        "responses": {
          "200": {
            "description": "child_case_cycle_payments found",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
            }
          }
        }
      },
      "post": {
        "summary": "creates a child_case_cycle_payment",
        "tags": [
          "child_case_cycle_payments"
        ],
        "parameters": [

        ],
        "responses": {
          "201": {
            "description": "child_case_cycle_payment created",
            "content": {
            }
          },
          "422": {
            "description": "invalid request",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createChildCaseCyclePayment"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/createChildCaseCyclePayment"
              }
            }
          }
        }
      }
    },
    "/api/v1/child_case_cycle_payments/{slug}": {
      "parameters": [
        {
          "name": "slug",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "retrieves a child_case_cycle_payment",
        "tags": [
          "child_case_cycle_payments"
        ],
        "responses": {
          "200": {
            "description": "child_case_cycle_payment found",
            "content": {
            }
          },
          "404": {
            "description": "child_case_cycle_payment not found",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
            }
          }
        }
      },
      "put": {
        "summary": "updates a child_case_cycle_payment",
        "tags": [
          "child_case_cycle_payments"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "child_case_cycle_payment updated",
            "content": {
            }
          },
          "422": {
            "description": "child_case_cycle_payment cannot be updated",
            "content": {
            }
          },
          "404": {
            "description": "child_case_cycle_payment not found",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateChildCaseCyclePayment"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/updateChildCaseCyclePayment"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "deletes a child_case_cycle_payment",
        "tags": [
          "child_case_cycle_payments"
        ],
        "responses": {
          "204": {
            "description": "child_case_cycle_payment deleted",
            "content": {
            }
          },
          "404": {
            "description": "child_case_cycle_payment not found",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
            }
          }
        }
      }
    },
    "/api/v1/child_case_cycles": {
      "get": {
        "summary": "lists all child_case_cycles for a user",
        "tags": [
          "child_case_cycles"
        ],
        "responses": {
          "200": {
            "description": "child_case_cycles found",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
            }
          }
        }
      },
      "post": {
        "summary": "creates a child_case_cycle",
        "tags": [
          "child_case_cycles"
        ],
        "parameters": [

        ],
        "responses": {
          "201": {
            "description": "child_case_cycle created",
            "content": {
            }
          },
          "422": {
            "description": "invalid request",
            "content": {
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createChildCaseCycle"
              }
            }
          }
        }
      }
    },
    "/api/v1/child_case_cycles/{slug}": {
      "parameters": [
        {
          "name": "slug",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "retrieves a child_case_cycle",
        "tags": [
          "child_case_cycles"
        ],
        "responses": {
          "200": {
            "description": "child_case_cycle found",
            "content": {
            }
          },
          "404": {
            "description": "child_case_cycle not found",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
            }
          }
        }
      },
      "put": {
        "summary": "updates a child_case_cycle",
        "tags": [
          "child_case_cycles"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "child_case_cycle updated",
            "content": {
            }
          },
          "422": {
            "description": "child_case_cycle cannot be updated",
            "content": {
            }
          },
          "404": {
            "description": "child_case_cycle not found",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateChildCaseCycle"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "deletes a child_case_cycle",
        "tags": [
          "child_case_cycles"
        ],
        "responses": {
          "204": {
            "description": "child_case_cycle deleted",
            "content": {
            }
          },
          "404": {
            "description": "child_case_cycle not found",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
            }
          }
        }
      }
    },
    "/api/v1/children": {
      "get": {
        "summary": "lists all children for a user",
        "tags": [
          "children"
        ],
        "responses": {
          "200": {
            "description": "children found",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
            }
          }
        }
      },
      "post": {
        "summary": "creates a child",
        "tags": [
          "children"
        ],
        "parameters": [

        ],
        "responses": {
          "201": {
            "description": "child created",
            "content": {
            }
          },
          "422": {
            "description": "invalid request",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createChild"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/createChild"
              }
            }
          }
        }
      }
    },
    "/api/v1/children/{slug}": {
      "parameters": [
        {
          "name": "slug",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "retrieves a child",
        "tags": [
          "children"
        ],
        "responses": {
          "200": {
            "description": "child found",
            "content": {
            }
          },
          "404": {
            "description": "child not found",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
            }
          }
        }
      },
      "put": {
        "summary": "updates a child",
        "tags": [
          "children"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "child updated",
            "content": {
            }
          },
          "422": {
            "description": "child cannot be updated",
            "content": {
            }
          },
          "404": {
            "description": "child not found",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateChild"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "deletes a child",
        "tags": [
          "children"
        ],
        "responses": {
          "204": {
            "description": "child deleted",
            "content": {
            }
          },
          "404": {
            "description": "child not found",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
            }
          }
        }
      }
    },
    "/api/v1/payments": {
      "get": {
        "summary": "lists all payments for a user",
        "tags": [
          "payments"
        ],
        "responses": {
          "200": {
            "description": "payments found",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
            }
          }
        }
      },
      "post": {
        "summary": "creates a payment",
        "tags": [
          "payments"
        ],
        "parameters": [

        ],
        "responses": {
          "201": {
            "description": "payment created",
            "content": {
            }
          },
          "422": {
            "description": "invalid request",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createPayment"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/createPayment"
              }
            }
          }
        }
      }
    },
    "/api/v1/payments/{slug}": {
      "parameters": [
        {
          "name": "slug",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "retrieves a payment",
        "tags": [
          "payments"
        ],
        "responses": {
          "200": {
            "description": "payment found",
            "content": {
            }
          },
          "404": {
            "description": "payment not found",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
            }
          }
        }
      },
      "put": {
        "summary": "updates a payment",
        "tags": [
          "payments"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "payment updated",
            "content": {
            }
          },
          "422": {
            "description": "payment cannot be updated",
            "content": {
            }
          },
          "404": {
            "description": "payment not found",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updatePayment"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/updatePayment"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "deletes a payment",
        "tags": [
          "payments"
        ],
        "responses": {
          "204": {
            "description": "payment deleted",
            "content": {
            }
          },
          "404": {
            "description": "payment not found",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
            }
          }
        }
      }
    },
    "/api/v1/sites": {
      "get": {
        "summary": "lists all sites for a user",
        "tags": [
          "sites"
        ],
        "responses": {
          "200": {
            "description": "sites found",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
            }
          }
        }
      },
      "post": {
        "summary": "creates a site",
        "tags": [
          "sites"
        ],
        "parameters": [

        ],
        "responses": {
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "201": {
            "description": "site created",
            "content": {
            }
          },
          "422": {
            "description": "invalid request",
            "content": {
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createSite"
              }
            }
          }
        }
      }
    },
    "/api/v1/sites/{slug}": {
      "parameters": [
        {
          "name": "slug",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "retrieves a site",
        "tags": [
          "sites"
        ],
        "responses": {
          "200": {
            "description": "site found",
            "content": {
            }
          },
          "404": {
            "description": "site not found",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
            }
          }
        }
      },
      "put": {
        "summary": "updates a site",
        "tags": [
          "sites"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "site updated",
            "content": {
            }
          },
          "422": {
            "description": "site cannot be updated",
            "content": {
            }
          },
          "404": {
            "description": "site not found",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateSite"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "deletes a site",
        "tags": [
          "sites"
        ],
        "responses": {
          "204": {
            "description": "site deleted",
            "content": {
            }
          },
          "404": {
            "description": "site not found",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
            }
          }
        }
      }
    },
    "/api/v1/users": {
      "get": {
        "summary": "retrieves all users",
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "description": "users found",
            "content": {
            }
          },
          "403": {
            "description": "forbidden",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
            }
          }
        }
      }
    },
    "/api/v1/profile": {
      "get": {
        "summary": "retrieves the user profile",
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "description": "profile found",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
            }
          }
        }
      }
    },
    "/confirmation": {
      "get": {
        "summary": "Confirms the user's account.",
        "parameters": [
          {
            "name": "confirmation_token",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user confirmed",
            "content": {
            }
          },
          "403": {
            "description": "forbidden",
            "content": {
            }
          }
        }
      }
    },
    "/signup": {
      "post": {
        "summary": "Signs up a new user; creates the user.",
        "tags": [
          "users"
        ],
        "parameters": [

        ],
        "responses": {
          "201": {
            "description": "user created",
            "content": {
            }
          },
          "422": {
            "description": "invalid request",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createUser"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/createUser"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "user": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "user@user.com"
          },
          "password": {
            "type": "string",
            "example": "badPassword123!"
          },
          "full_name": {
            "type": "string",
            "example": "Marlee Matlin"
          },
          "greeting_name": {
            "type": "string",
            "example": "Marlee"
          },
          "language": {
            "type": "string",
            "example": "Farsi"
          },
          "organization": {
            "type": "string",
            "example": "Society for the Promotion of Elfish Welfare"
          },
          "phone_number": {
            "type": "string",
            "example": "888-888-8888"
          },
          "service_agreement_accepted": {
            "type": "boolean",
            "example": "true"
          },
          "timezone": {
            "type": "string",
            "example": "Eastern Time (US & Canada)"
          }
        }
      },
      "case_statuses": {
        "type": "string",
        "enum": [
          "submitted",
          "pending",
          "approved",
          "denied"
        ],
        "example": "submitted"
      },
      "copay_frequencies": {
        "type": "string",
        "enum": [
          "daily",
          "weekly",
          "monthly"
        ],
        "example": "weekly"
      },
      "currency_or_null": {
        "anyOf": [
          {
            "type": "string",
            "example": "USD"
          },
          {
            "type": "null"
          }
        ]
      },
      "date_or_null": {
        "anyOf": [
          {
            "type": "string",
            "example": "2019-06-27"
          },
          {
            "type": "null"
          }
        ]
      },
      "license_types": {
        "type": "string",
        "enum": [
          "licensed_center",
          "licensed_family_home",
          "licensed_group_home",
          "license_exempt_home",
          "license_exempt_center"
        ],
        "example": "license_exempt_home"
      },
      "agency": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "example": "true"
          },
          "name": {
            "type": "string",
            "example": "Wisconsin Children's Services"
          },
          "state_id": {
            "type": "uuid",
            "example": "3fa57706-f5bb-4d40-9350-85871f698d55"
          }
        }
      },
      "business": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Harlequin Child Care"
          },
          "license_type": {
            "$ref": "#/components/schemas/license_types"
          },
          "active": {
            "type": "boolean",
            "example": "true"
          }
        }
      },
      "child": {
        "type": "object",
        "properties": {
          "ccms_id": {
            "type": "string",
            "example": "987654321"
          },
          "date_of_birth": {
            "type": "string",
            "example": "1992-11-01"
          },
          "full_name": {
            "type": "string",
            "example": "Sean Flannery"
          }
        }
      },
      "site": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Marberry Educational Center"
          },
          "address": {
            "type": "string",
            "example": "1100 Marks Ave"
          },
          "city_id": {
            "type": "uuid",
            "example": "3fa57706-f5bb-4d40-9350-85871f698d55"
          },
          "state_id": {
            "type": "uuid",
            "example": "3fa57706-f5bb-4d40-9350-85871f698d55"
          },
          "zip_id": {
            "type": "uuid",
            "example": "3fa57706-f5bb-4d40-9350-85871f698d55"
          },
          "county_id": {
            "type": "uuid",
            "example": "3fa57706-f5bb-4d40-9350-85871f698d55"
          },
          "qris_rating": {
            "type": "string",
            "example": "2"
          },
          "business_id": {
            "type": "uuid",
            "example": "3fa57706-f5bb-4d40-9350-85871f698d55"
          }
        }
      },
      "payment": {
        "type": "object",
        "properties": {
          "agency_id": {
            "type": "string",
            "example": "3fa57706-f5bb-4d40-9350-85871f698d52"
          },
          "amount_cents": {
            "type": "integer",
            "minimum": 0,
            "example": 19999
          },
          "amount_currency": {
            "type": "string",
            "example": "USD"
          },
          "care_finished_on": {
            "type": "string",
            "example": "2020-03-15"
          },
          "care_started_on": {
            "type": "string",
            "example": "2020-01-01"
          },
          "discrepancy_cents": {
            "type": "integer",
            "example": 456
          },
          "discrepancy_currency": {
            "$ref": "#/components/schemas/currency_or_null"
          },
          "paid_on": {
            "type": "string",
            "example": "2020-05-20"
          },
          "site_id": {
            "type": "string",
            "example": "3fa57706-f5bb-4d40-9350-85871f698d51"
          }
        }
      },
      "subsidy_rule": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Rule 1"
          },
          "county_id": {
            "type": "uuid",
            "example": "3fa57706-f5bb-4d40-9350-85871f698d52"
          },
          "state_id": {
            "type": "uuid",
            "example": "3fa57706-f5bb-4d40-9350-85871f698d52"
          },
          "max_age": {
            "type": "number",
            "example": 18
          },
          "part_day_rate_cents": {
            "type": "integer",
            "minimum": 0,
            "example": 2500
          },
          "part_day_rate_currency": {
            "type": "string",
            "example": "USD"
          },
          "full_day_rate_cents": {
            "type": "integer",
            "minimum": 0,
            "example": 3000
          },
          "full_day_rate_currency": {
            "type": "string",
            "example": "USD"
          },
          "part_day_max_hours": {
            "type": "number",
            "example": 4
          },
          "full_day_max_hours": {
            "type": "number",
            "example": 12
          },
          "full_plus_part_day_max_hours": {
            "type": "number",
            "example": 18
          },
          "full_plus_full_day_max_hours": {
            "type": "number",
            "example": 24
          },
          "part_day_threshold": {
            "type": "number",
            "example": 12
          },
          "full_day_threshold": {
            "type": "number",
            "example": 24
          },
          "license_type": {
            "$ref": "#/components/schemas/license_types"
          },
          "qris_rating": {
            "type": "string",
            "example": "1"
          }
        }
      },
      "case_cycle": {
        "type": "object",
        "properties": {
          "case_number": {
            "anyOf": [
              {
                "type": "string",
                "example": "123-45"
              },
              {
                "type": "null"
              }
            ]
          },
          "copay_cents": {
            "type": "integer",
            "minimum": 0
          },
          "copay_currency": {
            "type": "string",
            "example": "USD"
          },
          "copay_frequency": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/copay_frequencies"
              },
              {
                "type": "null"
              }
            ]
          },
          "effective_on": {
            "$ref": "#/components/schemas/date_or_null"
          },
          "expires_on": {
            "$ref": "#/components/schemas/date_or_null"
          },
          "notified_on": {
            "$ref": "#/components/schemas/date_or_null"
          },
          "status": {
            "$ref": "#/components/schemas/case_statuses"
          },
          "submitted_on": {
            "type": "string",
            "example": "2020-07-12"
          },
          "user_id": {
            "type": "uuid",
            "example": "3fa57706-f5bb-4d40-9350-85871f698d52"
          }
        }
      },
      "child_case_cycle": {
        "type": "object",
        "properties": {
          "case_cycle_id": {
            "type": "uuid",
            "example": "3fa57706-f5bb-4d40-9350-85871f698d52"
          },
          "child_id": {
            "type": "uuid",
            "example": "3fa57706-f5bb-4d40-9350-85871f698d52"
          },
          "full_days_allowed": {
            "type": "integer",
            "example": 21
          },
          "part_days_allowed": {
            "type": "integer",
            "example": 18
          },
          "subsidy_rule_id": {
            "type": "uuid",
            "example": "3fa57706-f5bb-4d40-9350-85871f698d52"
          },
          "user_id": {
            "type": "uuid",
            "example": "3fa57706-f5bb-4d40-9350-85871f698d52"
          }
        }
      },
      "child_case_cycle_payment": {
        "type": "object",
        "properties": {
          "amount_cents": {
            "type": "integer",
            "minimum": 0,
            "example": 19999
          },
          "amount_currency": {
            "type": "string",
            "example": "USD"
          },
          "child_case_cycle_id": {
            "type": "string",
            "example": "3fa57706-f5bb-4d40-9350-85871f698d51"
          },
          "discrepancy_cents": {
            "type": "integer",
            "example": 456
          },
          "discrepancy_currency": {
            "$ref": "#/components/schemas/currency_or_null"
          },
          "payment_id": {
            "type": "string",
            "example": "3fa57706-f5bb-4d40-9350-85871f698d51"
          }
        }
      },
      "createUser": {
        "type": "object",
        "properties": {
          "user": {
            "allOf": [
              {
                "$ref": "#/components/schemas/user"
              },
              {
                "type": "object",
                "required": [
                  "email",
                  "full_name",
                  "language",
                  "password",
                  "password_confirmation",
                  "service_agreement_accepted",
                  "timezone"
                ]
              }
            ]
          }
        }
      },
      "updateUser": {
        "type": "object",
        "properties": {
          "user": {
            "allOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          }
        }
      },
      "createBusiness": {
        "type": "object",
        "properties": {
          "business": {
            "allOf": [
              {
                "$ref": "#/components/schemas/business"
              },
              {
                "type": "object",
                "required": [
                  "name",
                  "license_type",
                  "user_id"
                ]
              }
            ]
          }
        }
      },
      "updateBusiness": {
        "type": "object",
        "properties": {
          "business": {
            "allOf": [
              {
                "$ref": "#/components/schemas/business"
              }
            ]
          }
        }
      },
      "createChild": {
        "type": "object",
        "properties": {
          "child": {
            "type": "object",
            "properties": {
              "ccms_id": {
                "type": "string",
                "example": "123456789"
              },
              "date_of_birth": {
                "type": "string",
                "example": "1991-11-01"
              },
              "full_name": {
                "type": "string",
                "example": "Seamus Finnigan"
              },
              "user_id": {
                "type": "uuid",
                "example": "3fa57706-f5bb-4d40-9350-85871f698d55"
              },
              "child_sites_attributes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "site_id"
                  ],
                  "properties": {
                    "site_id": {
                      "type": "uuid",
                      "example": "a42270e4-e4d4-485c-a57d-ccbad5729030"
                    },
                    "started_care": {
                      "type": "string",
                      "example": "2018-12-13"
                    },
                    "ended_care": {
                      "type": "string",
                      "example": "2019-08-04"
                    }
                  }
                }
              }
            },
            "required": [
              "full_name",
              "date_of_birth",
              "user_id"
            ]
          }
        }
      },
      "updateChild": {
        "type": "object",
        "properties": {
          "child": {
            "allOf": [
              {
                "$ref": "#/components/schemas/child"
              }
            ]
          }
        }
      },
      "createSite": {
        "type": "object",
        "properties": {
          "site": {
            "allOf": [
              {
                "$ref": "#/components/schemas/site"
              },
              {
                "type": "object",
                "required": [
                  "name",
                  "address",
                  "city_id",
                  "state_id",
                  "zip_id",
                  "county_id",
                  "business_id"
                ]
              }
            ]
          }
        }
      },
      "updateSite": {
        "type": "object",
        "properties": {
          "site": {
            "allOf": [
              {
                "$ref": "#/components/schemas/site"
              }
            ]
          }
        }
      },
      "createPayment": {
        "type": "object",
        "properties": {
          "payment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/payment"
              },
              {
                "type": "object",
                "required": [
                  "agency_id",
                  "site_id",
                  "amount_cents",
                  "care_finished_on",
                  "care_started_on",
                  "paid_on"
                ]
              }
            ]
          }
        }
      },
      "updatePayment": {
        "type": "object",
        "properties": {
          "payment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/payment"
              }
            ]
          }
        }
      },
      "createCaseCycle": {
        "type": "object",
        "properties": {
          "case_cycle": {
            "allOf": [
              {
                "$ref": "#/components/schemas/case_cycle"
              },
              {
                "type": "object",
                "required": [
                  "status",
                  "submitted_on"
                ]
              }
            ]
          }
        }
      },
      "updateCaseCycle": {
        "type": "object",
        "properties": {
          "case_cycle": {
            "allOf": [
              {
                "$ref": "#/components/schemas/case_cycle"
              }
            ]
          }
        }
      },
      "createChildCaseCycle": {
        "type": "object",
        "properties": {
          "child_case_cycle": {
            "allOf": [
              {
                "$ref": "#/components/schemas/child_case_cycle"
              },
              {
                "type": "object",
                "required": [
                  "case_cycle_id",
                  "child_id",
                  "full_days_allowed",
                  "part_days_allowed",
                  "subsidy_rule_id",
                  "user_id"
                ]
              }
            ]
          }
        }
      },
      "updateChildCaseCycle": {
        "type": "object",
        "properties": {
          "child_case_cycle": {
            "allOf": [
              {
                "$ref": "#/components/schemas/child_case_cycle"
              }
            ]
          }
        }
      },
      "createChildCaseCyclePayment": {
        "type": "object",
        "properties": {
          "child_case_cycle_payment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/child_case_cycle_payment"
              },
              {
                "type": "object",
                "required": [
                  "amount_cents",
                  "child_case_cycle_id",
                  "payment_id"
                ]
              }
            ]
          }
        }
      },
      "updateChildCaseCyclePayment": {
        "type": "object",
        "properties": {
          "child_case_cycle_payment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/child_case_cycle_payment"
              }
            ]
          }
        }
      }
    }
  }
}